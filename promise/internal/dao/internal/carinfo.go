// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// CarinfoDao is the data access object for table carinfo.
type CarinfoDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns CarinfoColumns // columns contains all the column names of Table for convenient usage.
}

// CarinfoColumns defines and stores column names for table carinfo.
type CarinfoColumns struct {
	VehicleNumber string // 车辆编号
	VehicleModel  string // 车辆型号
	SliceUrl      string // 切片存储地址
	SliceName     string // 切片名称
	SliceSize     string // 切片大小
	SliceMd5      string // 切片md5值
	EventId       string // 事件id
	Vin           string // 车架号
	VehicleUse    string // 车辆用途
	VehicleArea   string // 所属地区
}

//  carinfoColumns holds the columns for table carinfo.
var carinfoColumns = CarinfoColumns{
	VehicleNumber: "vehicle_number",
	VehicleModel:  "vehicle_model",
	SliceUrl:      "slice_url",
	SliceName:     "slice_name",
	SliceSize:     "slice_size",
	SliceMd5:      "slice_md5",
	EventId:       "eventId",
	Vin:           "vin",
	VehicleUse:    "vehicle_use",
	VehicleArea:   "vehicle_area",
}

// NewCarinfoDao creates and returns a new DAO object for table data access.
func NewCarinfoDao() *CarinfoDao {
	return &CarinfoDao{
		group:   "default",
		table:   "carinfo",
		columns: carinfoColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *CarinfoDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *CarinfoDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *CarinfoDao) Columns() CarinfoColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *CarinfoDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *CarinfoDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *CarinfoDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
